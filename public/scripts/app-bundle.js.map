{"version":3,"sources":["src/app.js","src/contact-list.js","src/contact-new.js","src/environment.js","src/main.js","src/web-api.js","src/resources/index.js"],"names":["App","message","configureRouter","config","router","title","map","route","moduleId","name","log","getLogger","ContactList","api","contacts","activePage","maxPage","lineCount","onCreating","selectedItem","showList","getContactList","then","info","e","selected","allLineCount","LineCount","Math","floor","catch","error","created","onPageChanged","detail","onClickRow","target","item","ContactNew","of","controller","rules","ensure","required","withMessage","matches","addRenderer","contactName","orderDisplay","note","activeFlg","validateModel","validate","v","valid","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","b","useAll","start","setRoot","WebAPI","isRequesting","page","strUrl","skipRows","fetch","response","status","rejected","json","addContact","postData","method","body"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.message = 'Hello World!';\n  }\n\n  configureRouter(config, router) {\n    config.title = 'Contacts';\n    config.map([\n      {route: '', moduleId: 'contact-list', name: 'contactList', title: 'List'},\n      {route: 'contactNew/', moduleId: 'contact-new', name: 'contactNew'}\n    ]);\n  }\n}\n","import {WebAPI} from './web-api';\nimport {inject} from 'aurelia-framework';\nimport {LogManager} from 'aurelia-framework';\n\nlet log = LogManager.getLogger('contact-list');\n\n@inject(WebAPI)\nexport class ContactList {\n  constructor(api) {\n    this.api = api;\n    this.contacts = [];\n    this.activePage = 1;\n    this.maxPage = 1;\n    this.lineCount = 10;\n    this.onCreating = false;\n    this.selectedItem = null;\n  }\n\n  showList() {\n    this.api.getContactList(this.activePage, this.lineCount).then(contacts => {\n      log.info('Success!');\n      log.info(contacts);\n      this.contacts = contacts.map((e) => {\n        e.selected = false;\n        return e;\n      });\n      let allLineCount = contacts[0].LineCount;\n      this.maxPage = Math.floor(allLineCount / this.lineCount);\n      if (allLineCount % this.lineCount !== 0) {\n        this.maxPage += 1;\n      }\n    }).catch(error => {\n      log.info('Error!');\n      log.info(error);\n    });\n  }\n\n  created() {\n    //this.api.getContactList().then(contacts => this.contacts = comntacts);\n    this.onCreating = true;\n    log.info('created!');\n    this.showList();\n  }\n\n  onPageChanged(e) {\n    log.info(`page changed ${e.detail}`);\n    if (this.onCreating) {\n      this.onCreating = false;\n    } else {\n      this.activePage = e.detail;\n      this.showList();\n    }\n    if (this.selectedItem) {\n      this.selectedItem.selected = false;\n      this.selectedItem = null;\n    }\n  }\n\n  onClickRow(e) {\n    log.info(e);\n    if (this.selectedItem) {\n      this.selectedItem.selected = false;\n    }\n    e.target.item.selected = true;\n    this.selectedItem = e.target.item;\n  }\n}\n","import {WebAPI} from './web-api';\nimport {inject, NewInstance} from 'aurelia-framework';\nimport {LogManager} from 'aurelia-framework';\nimport { ValidationController, ValidationRules } from 'aurelia-validation';\nimport { MaterializeFormValidationRenderer } from 'aurelia-materialize-bridge';\n\nlet log = LogManager.getLogger('contact-list');\n\n@inject(WebAPI, NewInstance.of(ValidationController))\nexport class ContactNew {\n  rules = ValidationRules\n    .ensure('contactName')\n      .required()\n        .withMessage('連絡先名称は必須です')\n    .ensure('orderDisplay')\n      .required()\n        .withMessage('表示順は必須です')\n      .matches(/[0-9]+/)\n        .withMessage('数値を指定して下さい')\n      .rules;\n\n  constructor(api, controller) {\n    this.api = api;\n    this.controller = controller;\n    this.controller.addRenderer(new MaterializeFormValidationRenderer());\n\n    this.contactName = '';\n    this.orderDisplay = '';\n    this.note = '';\n    this.activeFlg = true;\n    log.info('ContactNew-constructor');\n  }\n\n  validateModel() {\n    this.controller.validate().then(v => {\n      if (v.valid) {\n        this.message = 'All is good!';\n      } else {\n        this.message = 'You have errors!';\n      }\n    });\n  }\n\n  created() {\n    log.info('ContactNew-created');\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.use.plugin('aurelia-materialize-bridge', b => b.useAll());\n  aurelia.use.plugin('aurelia-validation');\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {LogManager} from 'aurelia-framework';\n\nlet log = LogManager.getLogger('web-api');\n\nexport class WebAPI {\n  isRequesting = false;\n\n  getContactList(page, lineCount) {\n    this.isRequesting = true;\n    let strUrl = 'https://izufr01.azurewebsites.net/api/SA21/01/';\n    let skipRows = (page - 1) * lineCount;\n    strUrl += skipRows + '/' + lineCount;\n    return fetch(strUrl)\n      .then(response => {\n        this.isRequesting = false;\n        log.info('Success!');\n        log.info(response);\n        if (response.status !== 200) {\n          rejected(response);\n        } else {\n          return response.json();\n        }\n      }).catch(error => {\n        this.isRequesting = false;\n        log.info('Error!');\n        log.info(response);\n        return error.json();\n      });\n  }\n\n  addContact(postData) {\n    this.isRequesting = true;\n    let strUrl = 'https://izufr01.azurewebsites.net/api/SA21/01/';\n    return fetch(strUrl, {method: 'POST', body: postData})\n      .then(response => {\n        this.isRequesting = false;\n        log.info('Success!');\n        log.info(response);\n        if (response.status !== 200) {\n          rejected(response);\n        } else {\n          return response.json();\n        }\n      }).catch(error => {\n        this.isRequesting = false;\n        log.info('Error!');\n        log.info(response);\n        return error.json();\n      });\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}