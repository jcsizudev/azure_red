{"version":3,"sources":["src/app.js","src/contact-list.js","src/environment.js","src/main.js","src/web-api.js","src/resources/index.js"],"names":["App","message","configureRouter","config","router","title","map","route","moduleId","log","getLogger","ContactList","api","contacts","created","getContactList","then","info","catch","error","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","b","useAll","start","setRoot","WebAPI","isRequesting","fetch","response","status","rejected","json"],"mappings":";;;;;;;;;;;;;MAAaA,cAAAA;AACX,mBAAc;AAAA;;AACZ,WAAKC,OAAL,GAAe,cAAf;AACD;;kBAEDC,2CAAgBC,QAAQC,QAAQ;AAC9BD,aAAOE,KAAP,GAAe,UAAf;AACAF,aAAOG,GAAP,CAAW,CACT,EAACC,OAAO,EAAR,EAAYC,UAAU,cAAtB,EAAsCH,OAAO,MAA7C,EADS,CAAX;AAGD;;;;;;;;;;;;;;;;;;;;;ACNH,MAAII,MAAM,6BAAWC,SAAX,CAAqB,cAArB,CAAV;;MAGaC,sBAAAA,sBADZ;AAEC,yBAAYC,GAAZ,EAAiB;AAAA;;AACf,WAAKA,GAAL,GAAWA,GAAX;AACA,WAAKC,QAAL,GAAgB,EAAhB;AACA,WAAKZ,OAAL,GAAe,eAAf;AACD;;0BAEDa,6BAAU;AAAA;;AAER,WAAKF,GAAL,CAASG,cAAT,GAA0BC,IAA1B,CAA+B,oBAAY;AACzCP,YAAIQ,IAAJ,CAAS,UAAT;AACAR,YAAIQ,IAAJ,CAASJ,QAAT;AACA,cAAKA,QAAL,GAAgBA,QAAhB;AACD,OAJD,EAIGK,KAJH,CAIS,iBAAS;AAChBT,YAAIQ,IAAJ,CAAS,QAAT;AACAR,YAAIQ,IAAJ,CAASE,KAAT;AACD,OAPD;AAQD;;;;;;;;;;;oBCxBY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCECC,YAAAA;;;;;;;;;;AAAT,WAASA,SAAT,CAAmBC,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYN,KAAhB,EAAuB;AACrBG,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYN,OAAhB,EAAyB;AACvBE,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQC,GAAR,CAAYI,MAAZ,CAAmB,4BAAnB,EAAiD;AAAA,aAAKC,EAAEC,MAAF,EAAL;AAAA,KAAjD;;AAEAP,YAAQQ,KAAR,GAAgBf,IAAhB,CAAqB;AAAA,aAAMO,QAAQS,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;;AChBD,MAAIvB,MAAM,6BAAWC,SAAX,CAAqB,SAArB,CAAV;;MAEauB,iBAAAA;;;;WACXC,eAAe;;;qBACfnB,2CAAiB;AAAA;;AACf,WAAKmB,YAAL,GAAoB,IAApB;AACA,aAAOC,MAAM,oDAAN,EACJnB,IADI,CACC,oBAAY;AAChB,cAAKkB,YAAL,GAAoB,KAApB;AACAzB,YAAIQ,IAAJ,CAAS,UAAT;AACAR,YAAIQ,IAAJ,CAASmB,QAAT;AACA,YAAIA,SAASC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,mBAASF,QAAT;AACD,SAFD,MAEO;AACL,iBAAOA,SAASG,IAAT,EAAP;AACD;AACF,OAVI,EAUFrB,KAVE,CAUI,iBAAS;AAChB,cAAKgB,YAAL,GAAoB,KAApB;AACAzB,YAAIQ,IAAJ,CAAS,QAAT;AACAR,YAAIQ,IAAJ,CAASmB,QAAT;AACA,eAAOjB,MAAMoB,IAAN,EAAP;AACD,OAfI,CAAP;AAgBD;;;;;;;;;;;UCxBajB,YAAAA;AAAT,WAASA,SAAT,CAAmBnB,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.message = 'Hello World!';\n  }\n\n  configureRouter(config, router) {\n    config.title = 'Contacts';\n    config.map([\n      {route: '', moduleId: 'contact-list', title: 'List'}\n    ]);\n  }\n}\n","import {WebAPI} from './web-api';\nimport {inject} from 'aurelia-framework';\nimport {LogManager} from 'aurelia-framework';\n\nlet log = LogManager.getLogger('contact-list');\n\n@inject(WebAPI)\nexport class ContactList {\n  constructor(api) {\n    this.api = api;\n    this.contacts = [];\n    this.message = 'Contact List!';\n  }\n\n  created() {\n    //this.api.getContactList().then(contacts => this.contacts = comntacts);\n    this.api.getContactList().then(contacts => {\n      log.info('Success!');\n      log.info(contacts);\n      this.contacts = contacts;\n    }).catch(error => {\n      log.info('Error!');\n      log.info(error);\n    });\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.use.plugin('aurelia-materialize-bridge', b => b.useAll());\n  \n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {LogManager} from 'aurelia-framework';\n\nlet log = LogManager.getLogger('web-api');\n\nexport class WebAPI {\n  isRequesting = false;\n  getContactList() {\n    this.isRequesting = true;\n    return fetch('https://izufr01.azurewebsites.net/api/SA21/01/0/10')\n      .then(response => {\n        this.isRequesting = false;\n        log.info('Success!');\n        log.info(response);\n        if (response.status !== 200) {\n          rejected(response);\n        } else {\n          return response.json();\n        }\n      }).catch(error => {\n        this.isRequesting = false;\n        log.info('Error!');\n        log.info(response);\n        return error.json();\n      });\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}